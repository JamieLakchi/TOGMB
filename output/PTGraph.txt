digraph m{
node1[label="Statement"];
node2[label="AssignFunction"];
node3[label="Variable"];
node4[label="f", style=dashed, fillcolor=lightgrey, style="filled,dashed"];
node3->node4[style=dashed];
node2->node3;
node5[label="(", style=dashed, fillcolor=lightgrey, style="filled,dashed"];
node2->node5[style=dashed];
node6[label="VarList"];
node7[label="Variable"];
node8[label="x", style=dashed, fillcolor=lightgrey, style="filled,dashed"];
node7->node8[style=dashed];
node6->node7;
node9[label=",", style=dashed, fillcolor=lightgrey, style="filled,dashed"];
node6->node9[style=dashed];
node10[label="VarList"];
node11[label="Variable"];
node12[label="m", style=dashed, fillcolor=lightgrey, style="filled,dashed"];
node11->node12[style=dashed];
node10->node11;
node6->node10;
node2->node6;
node13[label=")", style=dashed, fillcolor=lightgrey, style="filled,dashed"];
node2->node13[style=dashed];
node14[label="=", style=dashed, fillcolor=lightgrey, style="filled,dashed"];
node2->node14[style=dashed];
node15[label="SuperExpr"];
node16[label="+", style=dashed, fillcolor=lightgrey, style="filled,dashed"];
node15->node16[style=dashed];
node17[label="Term"];
node18[label="Factor"];
node19[label="Number"];
node20[label="2", style=dashed, fillcolor=lightgrey, style="filled,dashed"];
node19->node20[style=dashed];
node18->node19;
node17->node18;
node15->node17;
node21[label="-", style=dashed, fillcolor=lightgrey, style="filled,dashed"];
node15->node21[style=dashed];
node22[label="Expr"];
node23[label="Term"];
node24[label="Factor"];
node25[label="Number"];
node26[label="3", style=dashed, fillcolor=lightgrey, style="filled,dashed"];
node25->node26[style=dashed];
node24->node25;
node23->node24;
node22->node23;
node27[label="+", style=dashed, fillcolor=lightgrey, style="filled,dashed"];
node22->node27[style=dashed];
node28[label="Expr"];
node29[label="Term"];
node30[label="Factor"];
node31[label="Number"];
node32[label="5", style=dashed, fillcolor=lightgrey, style="filled,dashed"];
node31->node32[style=dashed];
node30->node31;
node29->node30;
node28->node29;
node22->node28;
node15->node22;
node2->node15;
node1->node2;
}